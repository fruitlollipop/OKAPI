# This is a config file for logging
# Author: Tangxing Zhou
# Usage:
#        import logging
#        import log.cfg
#        with open('logging.config', encoding='utf-8') as fp:
#            logging.config.fileConfig(fp)
#        root_logger  =  logging.getLogger('root')

# -------------------- loggers--------------------
[loggers]
keys = root, notset, debug, info, warn, error, critical

# level = NOTSET(0), DEBUG(10), INFO(20), WARN(30), ERROR(40), CRITICAL(50)
# propagate = 1, 0            1: logging messages are passed to the handlers of ancestor loggers. 0: Not
# filters = ,                 A list of ids of the filters for this handler
# handlers = ,                A list of ids of the handlers for this logger

[logger_root]
level = DEBUG
propagate = 1
filters = little
handlers = console

[logger_notset]
level = DEBUG
qualname = notset
propagate = 1
filters = little
handlers = file

[logger_debug]
level = DEBUG
qualname = debug
propagate = 1
filters = little
handlers = file

[logger_info]
level = DEBUG
qualname = info
propagate = 1
filters = little
handlers = file

[logger_warn]
level = DEBUG
qualname = warn
propagate = 1
filters = little
handlers = file

[logger_error]
level = DEBUG
qualname = error
propagate = 1
filters = little
handlers = file

[logger_critical]
level = DEBUG
qualname = critical
propagate = 1
filters = little
handlers = file

# -------------------- handlers--------------------
[handlers]
keys = console, file, rotatingfile, timerotatingfile, smtp, memory

[handler_console]
class = logging.StreamHandler
formatter = brief
level = DEBUG
filters = little
args = (sys.stdout,)
# stream = None

[handler_file]
class = logging.FileHandler
formatter = brief
level = DEBUG
filters = little
args = ('log.log', 'w')
# filename =
# mode = 'a'
# encoding = None
# delay = False

[handler_rotatingfile]
class = logging.handlers.RotatingFileHandler
formatter = brief
level = DEBUG
filters = little
args = ('log.log', 'a', 10*1024*1024, 3)
# filename =
# mode = 'a'
# maxBytes = 0
# backupCount = 0
# encoding = None
# delay = 0

[handler_timerotatingfile]
class = logging.handlers.TimedRotatingFileHandler
formatter = brief
level = DEBUG
filters = little
args = ('log.log', 'H')
# filename =
# when = 'h'
# interval = 1
# backupCount = 0
# encoding = None
# delay = False
# utc = False
# atTime = None

[handler_smtp]
class = logging.handlers.SMTPHandler
formatter = brief
level = DEBUG
filters = little
args = ('smtp.126.com', 'zhoutangxing@126.com', 'zhoutangxing@126.com', 'Log Report', ['zhoutangxing@126.com', 'zhou19891001'])
# mailhost =
# fromaddr =
# toaddrs =
# subject =
# credentials = None
# secure = None
# timeout = 1.0

[handler_memory]
class = logging.handlers.MemoryHandler
formatter = brief
level = DEBUG
filters = little
args = (10000, DEBUG)
target = smtp
# capacity =
# flushLevel = ERROR
# target = None

# -------------------- formatters--------------------
[formatters]
keys = brief, normal, precise

#|------------------------------------------------------format table-------------------------------------------------------------------------------------|
#|    Attribute    | Format              | Description                                                                                                   |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|    asctime      | %(asctime)s         | Human-readable time when the LogRecord was created. By default this is of the form ‘2003-07-08 16:49:45,896’. |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|    created      | %(created)f         | Time when the LogRecord was created (as returned by time.time()).                                             |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|    filename     | %(filename)s        | Filename portion of pathname.                                                                                 |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|    funcName     | %(funcName)s        | Name of function containing the logging call.                                                                 |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|   levelname     | %(levelname)s       | Text logging level for the message ('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL').                         |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|    levelno      | %(levelno)s         | Numeric logging level for the message (DEBUG, INFO, WARNING, ERROR, CRITICAL).                                |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|     lineno      | %(lineno)d          | Source line number where the logging call was issued (if available).                                          |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|     module      | %(module)s          | Module (name portion of filename).                                                                            |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|      msecs      | %(msecs)d           | Millisecond portion of the time when the LogRecord was created.                                               |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|     message     | %(message)s         | The logged message, computed as msg % args. This is set when Formatter.format() is invoked.                   |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|      name       | %(name)s            | Name of the logger used to log the call.                                                                      |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|    pathname     | %(pathname)s        | Full pathname of the source file where the logging call was issued (if available).                            |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|     process     | %(process)d         | Process ID (if available).                                                                                    |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|   processName   | %(processName)s     | Process name (if available).                                                                                  |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#| relativeCreated | %(relativeCreated)d | Time in milliseconds when the LogRecord was created, relative to the time the logging module was loaded.      |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|     thread      | %(thread)d          | Thread ID (if available).                                                                                     |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------
#|   threadName    | %(threadName)s      | Thread name (if available).                                                                                   |
#|-------------------------------------------------------------------------------------------------------------------------------------------------------|

[formatter_brief]
format = %(asctime)s %(name)s %(filename)s [line:%(lineno)d] %(levelname)s: %(message)s
datefmt = '%a, %d %b %Y %H:%M:%S'

[formatter_normal]
format = %(asctime)s %(name)s %(pathname)s [module:%(module)s function:%(funcName)s line:%(lineno)d] %(levelname)s: %(message)s
datefmt = '%a, %d %b %Y %H:%M:%S'

[formatter_precise]
format = %(asctime)s %(name)s %(pathname)s [module:%(module)s function:%(funcName)s line:%(lineno)d] (process:%(process)d thread:%(thread)d) %(levelname)s: %(message)s
datefmt = '%a, %d %b %Y %H:%M:%S'

# -------------------- filters--------------------
[filters]
keys = little, some, more, most

[filter_little]
name = 'error'

[filter_some]
name = 'error'

[filter_more]
name = 'error'

[filter_most]
name = 'error'
